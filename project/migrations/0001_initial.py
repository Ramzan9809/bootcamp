# Generated by Django 5.1.6 on 2025-04-05 16:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Фото')),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('cound_comments', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество комментариев')),
                ('author', models.CharField(max_length=100, verbose_name='Автор')),
                ('date_post', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Блог',
                'verbose_name_plural': 'Блог',
            },
        ),
        migrations.CreateModel(
            name='CategoryBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Категории книг',
                'verbose_name_plural': 'Категории книг',
            },
        ),
        migrations.CreateModel(
            name='CategoryCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название категории')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название сайта')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Логотип')),
                ('phone', models.CharField(help_text='+996 554977013', max_length=20, verbose_name='Номер телефона')),
                ('phone2', models.CharField(blank=True, help_text='+996 554977013', max_length=20, null=True, verbose_name='Номер телефона 2')),
                ('email', models.EmailField(help_text='courses_kg@gmail.com', max_length=100, verbose_name='Email')),
                ('email2', models.EmailField(blank=True, help_text='courses_kg@gmail.com', max_length=100, null=True, verbose_name='Email 2')),
                ('address', models.CharField(blank=True, help_text='Пр. Ленина, 30', max_length=100, null=True, verbose_name='Адресс')),
                ('map', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка на карту')),
            ],
            options={
                'verbose_name': 'данные',
                'verbose_name_plural': 'Данные',
            },
        ),
        migrations.CreateModel(
            name='Instructors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Имя фамилие')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Фото ава')),
                ('position', models.CharField(max_length=100, verbose_name='Должность')),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
            ],
            options={
                'verbose_name': 'Инструкторы',
                'verbose_name_plural': 'Инструкторы',
            },
        ),
        migrations.CreateModel(
            name='OurCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('desc', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'наш курс',
                'verbose_name_plural': 'Наши курсы',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='фио')),
                ('desc', models.TextField(verbose_name='Описание')),
                ('rating', models.IntegerField(default=1, verbose_name='Рейтинг')),
            ],
            options={
                'verbose_name': 'Отзывы',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('email', models.EmailField(blank=True, help_text='courses_kg@gmail.com', max_length=100, null=True, verbose_name='Email')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='media/')),
                ('desc', models.TextField(verbose_name='Описание')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='project.blog', verbose_name='Блог')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='project.comments', verbose_name='Блог')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название курса')),
                ('price', models.CharField(max_length=10, verbose_name='Стоимость')),
                ('img', models.ImageField(blank=True, upload_to='images/')),
                ('desc', models.TextField(verbose_name='Описание')),
                ('but', models.CharField(max_length=50, verbose_name='Название кнопки')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.categorycourses', verbose_name='категории')),
                ('instructors', models.ManyToManyField(to='project.instructors', verbose_name='Инструкторы')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.AddField(
            model_name='instructors',
            name='reviews',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.reviews', verbose_name='Отзыв'),
        ),
        migrations.CreateModel(
            name='CoursePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Фото')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='цена')),
                ('count_lections', models.CharField(help_text='12 лекции', max_length=100, verbose_name='Количество лекции')),
                ('hours', models.CharField(max_length=20, verbose_name='Сколько часов')),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.instructors', verbose_name='Инструкторы')),
                ('reviews', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.reviews', verbose_name='Отзыв')),
            ],
            options={
                'verbose_name': 'курсы страница',
                'verbose_name_plural': 'курсы страница',
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('img', models.ImageField(blank=True, upload_to='media/')),
                ('author', models.CharField(max_length=100, verbose_name='Имя Автора')),
                ('desc', models.TextField(verbose_name='Описание')),
                ('Page_Count', models.CharField(blank=True, max_length=100, null=True, verbose_name='Количество страниц')),
                ('Word_Count', models.CharField(blank=True, max_length=100, null=True, verbose_name='Количество слов')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.categorybook', verbose_name='категория')),
                ('reviews', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.reviews', verbose_name='Отзыв')),
            ],
            options={
                'verbose_name': 'книга',
                'verbose_name_plural': 'Книги',
            },
        ),
        migrations.CreateModel(
            name='SocialLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название соцсети')),
                ('link', models.CharField(max_length=255, verbose_name='ссылка')),
                ('image', models.CharField(max_length=255, verbose_name='ссылка на лого')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='project.instructors')),
            ],
            options={
                'verbose_name': 'Соц.сеть',
                'verbose_name_plural': 'Соц.сеть',
            },
        ),
        migrations.AddField(
            model_name='instructors',
            name='social',
            field=models.ManyToManyField(blank=True, null=True, to='project.sociallinks', verbose_name='Социальные сети'),
        ),
    ]
